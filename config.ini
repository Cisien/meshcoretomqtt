# ============================================================================
# MQTT Broker Configuration
# ============================================================================
# Multiple MQTT brokers can be configured ([mqtt], [mqtt2], [mqtt3], etc.)
# All brokers receive status updates and have Last Will and Testament (LWT) set.
# The script exits if any broker disconnects.
#
# Common Settings:
#   enabled          - Enable/disable this broker (true/false)
#   server           - MQTT broker hostname or IP address
#   port             - MQTT broker port
#   transport        - Connection type: "tcp" or "websockets"
#   use_tls          - Enable TLS/SSL encryption (true/false)
#   tls_insecure     - Skip certificate verification (true/false, default: false)
#   qos              - Quality of Service level (0 or 2)
#   retain           - Retain messages on broker (true/false)
#   keepalive        - Keep-alive interval in seconds (default: 60)
#
# Authentication Methods (choose one):
#   1. Username/Password:
#      username      - MQTT username
#      password      - MQTT password
#
#   2. Public Key Auth Token:
#      use_auth_token   - Generate JWT token using device private key (true/false)
#      token_audience   - JWT audience claim (optional, broker-specific)
# ============================================================================

[mqtt]
enabled = true
server = mqtt_server
port = 1883
username = mqtt_user
password = mqtt_password
client_id_prefix = meshcore_
qos = 0
retain = true

[mqtt2]
enabled = false
# learn more: https://analyzer.letsme.sh/observer/onboard - requires 3 letter IATA code for topic <location> below
server = mqtt-us-v1.letsmesh.net
use_auth_token = true
token_audience = mqtt-us-v1.letsmesh.net
port = 443
transport = websockets
use_tls = true
qos = 0
retain = true
keepalive = 60

[serial]
ports = /dev/ttyACM0
baud_rate = 115200
timeout = 2

[topics]
status = meshcore/<location>/status
debug = meshcore/<location>/debug
packets = meshcore/<location>/packets